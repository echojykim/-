분기처리 
isNull : "널일경우"
isNotNull : "널이아닐경우"
isEmpty : "공백일경우"
isNotEmpty : "공백이아닐경우"
isGreaterThan : ">" (gt)
isLessThan : "<" (lt)
isGreaterEqual : ">=" (ge)
isLessEqual : "<=" (le)
isEqual : "==" (eq) 
isNotEqual : "!=" 

if test salary != null and salary != 0 
-> 똑같은 말 
<if test="salaryCompare!=null and salaryCompare eq 'le'">
<![CDATA[ 
and
salary <=#{salary}				
]]>
</if>
<if test="salaryCompare!=null and salaryCompare eq 'ge'">
<![CDATA[ 
and
salary >= #{salary}				
]]>
</if>

where 1=1
->말 그대로 조건문에서 참( true )을 말함. 특별히 의미있는건 아님. 쿼리의 조건을 동적으로 변경하거나 sql 작성시 조건을 주석처리하며 질의문을 변경가능하기 때문에 사용. 

sql 문에서 만약 phone번호가 맞는지를 확인하려면 번거로운 방법 2가지.
1) address 부분을 주석해야함  
2) where phone~ 이렇게 수정해야함

SELECT
      userid
    , phone
    , address
FROM user
WHERE 1=1
AND address = 'ssd0908.tistory.com'
AND phone = '010-1234-5678'

- 위와같이 where 1=1을 선언했을 경우 주석을 좀 더 쉽게 처리하면서 디버깅을 수월하게 할 수 있음. 

저 위의 sql문은 mybatis에선 이렇게 바뀜
SELECT 
    * 
FROM user
<where>
    <if test="phone != null and phone != ''">
        AND phone = '010-1234-5678'   
    </if>
    <if test="address != null and address != ''">
        AND address = 'ssd0908.tistory.com'   
    </if>
</where>
~mybatis - mapper.xml where태그 설명~
- 위와 같이 질의 조건에 따라 동적쿼리의 생성여부가 결정되는데 조건태그(<if>)를 <where> 태그로 감싸서 생성을 한다면 MYBATIS에서 자동으로 질의조건에 따라 WHERE를 생성하거나 생략. 즉, WHERE 1=1과 같은 처리 함(where가 and 키워드에 의해 터지지 않게 where 1=1넣음. <where></where> 대체 가능)
- where 내부의 if태그들이 모두 false라면 where 내부가 빈 경우 where 키워드를 제거해준다. 

select문 외에 다른 데이터 수정/삭제 쿼리에는 사용을 지양하는게 좋음. update, delete에선 where 1=1을 사용할 시 조건이 없어 데이터가 변경/삭제될 우려가 있음. 
-> 참고사이트: https://ssd0908.tistory.com/entry/MYSQL-WHERE-11-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD%EC%9C%BC%EB%A1%9C%EB%8A%94

if구문/choose/when/otherwise구문 다 가능
- if태그 사용의 경우 조건식이 true를 반환하는 if태그는 모두 쿼리문 실행
- choose구문은 if else 구문임. mybatis에선 if else문 대신 choose구문 사용
- choose 구문은 태그 내의 여러개의 when태그문의 경우(조건이 1개일 경우와 여러개일 경우가 있음) 조건식이 true를 반환하는 when태그를 찾으면 거기서 멈추고 해당 when태그의 쿼리만 실행
- choose태그안에선 when+otherwise태그를 작성함. when태그는 각각 조건식 속성(여러번 작성 가능) / 하지만 when태그에서 조건식중 true반환할게 없다면 otherwise태그내에 작성된게 실행. otherwise태그는 생략가능
-> 참고사이트: https://kimvampa.tistory.com/178 
-> 마이바티스에서 CDATA[]를 사용하는 이유 : https://gdtbgl93.tistory.com/53

- 다만 이 경우 &&/ || / < / > / <= / >= 연산자 사용불가
- and / or / lt / gt / le / ge를 사용해야함


foreach태그(쿼리 반복처리)
- 전달되는 jobCodes는 list 형식의 컬렉션임. 
- forEach말고 foreach 태그가 별도로 있음
<select id="search3" resultMap="empMap">
select
*
from(
select 
e.*,
(select job_name from job where job_code = e.job_code) job_name,
(select dept_title from dept where dept_id = e.dept_code) dept_title,
decode(substr(emp_no,8,1),'1','남','2','여') gender 
from 
emp e 
) e
<where>
<if test="jobCodes!=null">
e.job_code in
<foreach collection="jobCodes" item="jc" open="(" close=")" separator=",">
#{jc}
</foreach>
</if>
</where>
</select>
- 
